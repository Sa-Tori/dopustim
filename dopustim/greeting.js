'use strict';
const Discord = require('discord.js');
const client = new Discord.Client();
const poetry = require('./poetry.json');

client.on('ready', () => {
  console.log('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ö–∞—Ä—Ç—É—Å–∞ –≥–æ—Ç–æ–≤–æ');
});

function getRandom(l, r) {
    return Math.round((Math.random() * r)) % (r - l) + l;
}

client.on('guildMemberAdd', member => {
  const channel = member.guild.channels.cache.find(ch => ch.name === 'üçì–≤—Ä–∞—Ç–∞' || ch.name === "ü§ñ–≤–∞—à-–ø–æ–∫–æ—Ä–Ω—ã–π-—Å–ª—É–≥–∞" || ch.name === "üõãwelcome");
  if (!channel) return;
  channel.send(`${member} –∞ —Ç—ã –µ—â—ë –∫—Ç–æ —Ç–∞–∫–æ–π <:ezgif1:840339018453090306>`);
});

client.on('guildMemberRemove', member => {
  const channel = member.guild.channels.cache.find(ch => ch.name === 'üçì–≤—Ä–∞—Ç–∞' || ch.name === "ü§ñ–≤–∞—à-–ø–æ–∫–æ—Ä–Ω—ã–π-—Å–ª—É–≥–∞" || ch.name === "üõãwelcome");
  if (!channel) return;
  channel.send(`–†–∞–∑–±–∏—Ç—ã –æ–∫–Ω–∞,\n–ú–µ—Ä–∫–Ω–µ—Ç —Å–≤–µ—Ç..\n–ù–∞ –≥–æ–ª–æ–≤—É –Ω–∞–¥–µ—Ç –ø–∞–∫–µ—Ç.`);
});

client.on("message", msg => {
    if (msg.content.startsWith("–ù–∏—á–µ –Ω–µ –º–µ—Ä–∫–Ω–µ—Ç!") && msg.author.id == "776445694587306028") {
      msg.channel.send("–°–∫–∞—Ç–µ—Ä—Ç—å—é –¥–æ—Ä–æ–∂–∫–∞ <:mme:625115196637315124>");
    }   
});

client.on('guildMemberAdd', async (member) => {
    let greet = poetry.greet;
    const channel = member.guild.channels.cache.get('532954367100452866');
    if (!channel) return;
    let fl = 0;
    try {
        if (channel) {
            let delay = async (duration) => { await new Promise(resolve => setTimeout(resolve, duration)) };
            await delay(5 * 1000);
            let str = member.id;
            str = str + "";
            if (str.lastIndexOf('3') == 17 || str.lastIndexOf('5') == 17 || str.lastIndexOf('9') == 17) {
                if (getRandom(1, 2) == 2) {
                    greet = poetry.greet2;
                    fl = 1;
                }
                let r = Math.floor(Math.random() * greet.length);
                const greeting = greet[r];
                if (fl == 1) channel.send('${member}' + greeting);
                else channel.send(greeting);
            }
        }
    } catch (err) {
        msg.channel.send('<@542663623789641729> –º–∞–º, —è —É–ø–∞–ª <a:hlepng:882291167948079165>');
        let control = client.channels.cache.get('878520465856036935');
        control.send('–ú–∞–º–∞, —Ö–ª–µ–ø!');
        console.log(err);
    };
});

//–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–∏–ø–ª–æ–º–Ω–æ–π —Ä–∞–±–æ—Ç—ã
client.on('guildMemberAdd', async (member) => {
    let greet = poetry.greet;
    const channel = member.guild.channels.cache.get('1122856220567539752');
    if (!channel) return;
    let fl = 0;
    try {
        if (channel) {
            let delay = async (duration) => { await new Promise(resolve => setTimeout(resolve, duration)) };
            await delay(5 * 1000);
            let str = member.id;
            str = str + "";
            if (str.lastIndexOf('3') == 17 || str.lastIndexOf('5') == 17 || str.lastIndexOf('9') == 17) {
                if (getRandom(1, 2) == 2) {
                    greet = poetry.greet2;
                    fl = 1;
                }
                let r = Math.floor(Math.random() * greet.length);
                const greeting = greet[r];
                if (fl == 1) channel.send('${member}' + greeting);
                else channel.send(greeting);
            }
        }
    } catch (err) {
        msg.channel.send('<@542663623789641729> –º–∞–º, —è —É–ø–∞–ª <a:hlepng:882291167948079165>');
        let control = client.channels.cache.get('878520465856036935');
        control.send('–ú–∞–º–∞, —Ö–ª–µ–ø!');
        console.log(err);
    };
});

client.on("message", async (msg) => {
    try {
        let delay = async (duration) => { await new Promise(resolve => setTimeout(resolve, duration)) };
        await delay(10 * 1000);
        if (msg.author.id == "776445694587306028") { //–ú–µ—Ä–ª–∞–π
            if (msg.content.toLowerCase().indexOf("—Å–º–æ—Ç—Ä–∏, –∫—Ç–æ —Ç—É—Ç —É –Ω–∞—Å") != -1) msg.channel.send("–ï—â—ë –æ–¥–∏–Ω –ø—Ä–∏–∑—Ä–∞–∫ <:ezgif:840338961275813909>");
            if (msg.content.toLowerCase().indexOf("—ç—Ç–æ–≥–æ –º—ã –±—É–¥–µ–º –≤—Å—Ç—Ä–µ—á–∞—Ç—å") != -1) msg.channel.send("–î—É–º–∞—é, –Ω–µ—Ç. –û–Ω —É–∂–µ —É—Ö–æ–¥–∏—Ç.");
            if (msg.content.toLowerCase().indexOf("–¥–µ—Ä–µ–≤—å—è, —Ü–≤–µ—Ç—ã –∑–∞–≤—è–ª–∏,") != -1) msg.channel.send("–ê —Ç–µ–ø–µ—Ä—å –æ—Ç –Ω–µ–≥–æ –æ–¥–Ω–∏ –æ–≥—Ä—ã–∑–∫–∏ –æ—Å—Ç–∞–ª–∏—Å—å <:059:592420289921548312>");
            if (msg.content.toLowerCase().indexOf("–Ø –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–±–µ –±—É—Ö–ª–æ.") != -1) msg.channel.send("–£ –Ω–∞—Å –µ–≥–æ –Ω–µ—Ç <:084:592420618084024320>");
            if (msg.content.toLowerCase().indexOf("–î–µ–¥, —Ç—ã –æ–ø—è—Ç—å –∑–∞–±—ã–ª –ø—Ä–∏–Ω—è—Ç—å") != -1) msg.channel.send("–Ø —Ö–æ—á—É –∑–æ–ª–æ—Ç–æ!!!");
            if (msg.content.toLowerCase().indexOf("–¢–æ–ª—å–∫–æ –æ–ª–µ–Ω–µ–π –Ω–µ –∫–æ—Ä–º–∏, —É") != -1) msg.channel.send("–ú–æ–≥ –±—ã –∏ –ø–æ–≤–µ–∂–ª–∏–≤–µ–µ –≥–æ–≤–æ—Ä–∏—Ç—å –ø—Ä–æ –∞–¥–º–∏–Ω–∞.");
            if (msg.content.toLowerCase().indexOf("–∞—Ä—Ç—É—Å, —Ç–µ–±—è –∑–∞–∫–ª–∏–Ω–∏–ª–æ") != -1) msg.channel.send("—Ö–æ—Ä–æ—à–æ");
            if (msg.content.toLowerCase().indexOf("–≤—Ç–æ—Ä–∞—è –æ—à–∏–±–∫–∞ –∂–µ–Ω—â–∏–Ω—ã") != -1) msg.channel.send("<@776445694587306028>, —Ç—ã –ø—å—è–Ω?");
            if (msg.content.toLowerCase().indexOf("–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —É—Ç–æ–∫") != -1) msg.channel.send('–ú–æ–∂–µ—Ç "—Å—É—Ç–æ–∫"?');
            if (msg.content.toLowerCase().indexOf("–æ—Ä—è—á–∏–µ —á–µ–±—É—Ä–µ–∫–∏") != -1) msg.channel.send("<@776445694587306028> —É –Ω–∞—Å —Ç—É—Ç —á—Ç–æ, —á–µ–±—É—Ä–µ—á–Ω–∞—è??");
            if (msg.content.toLowerCase().indexOf("—è –Ω–∞–¥–µ—é—Å—å, —Ç—ã –ø—Ä–∏–Ω–µ—Å –º–æ—ë") != -1) msg.channel.send("–û—Ç–∫—É–¥–∞ —É –º–µ—Ä—Ç–≤–µ—Ü–æ–≤ –∑–æ–ª–æ—Ç–æ???");
        };
        if (msg.author.id == "836240368206872576") { //–ë–∞—Ä–∏—Å—Ç–∞–Ω
            if (msg.content.toLowerCase().indexOf("–ø—Ä–∏—à–µ–ª —Å—é–¥–∞ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –¥—Ä–∞–∫–æ–Ω–æ–≤?") != -1) msg.channel.send("–ù–µ—Ç –∏—Ö —Å–µ–π—á–∞—Å, –æ–Ω–∏ –≤ —Å–ø—è—á–∫–µ.");
            if (msg.content.toLowerCase().indexOf("–≤—ã –Ω–∞—à –Ω–æ–≤—ã–π —ç–ª–µ–∫—Ç—Ä–∏–∫") != -1) msg.channel.send("–ë–∞—Ä–∏—Å—Ç–∞–Ω, –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —Ç—ã —á—Ç–æ-—Ç–æ –ø—É—Ç–∞–µ—à—å...");
            if (msg.content.toLowerCase().indexOf("–æ–ª—å–∫–æ –≤—á–µ—Ä–∞ –æ —Ç–µ–±–µ –¥—É–º–∞–ª") != -1) msg.channel.send("<@836240368206872576> —Ç—ã —á—Ç–æ, –º–∞–Ω—å—è–∫ –∫–∞–∫–æ–π-—Ç–æ?");
            if (msg.content.toLowerCase().indexOf("—Ç–æ –Ω–µ –∫–æ—Ç, —ç—Ç–æ –Ω–∞—à") != -1) msg.channel.send("–ù–µ –ø–æ–º–∏–Ω–∞–π –∞–¥–º–∏–Ω–∞");
            if (msg.content.toLowerCase().indexOf("—Ç—É—Å, –Ω–µ—Å–∏ –ª–æ–ø–∞—Ç—É") != -1) msg.channel.send("–ú–æ–∂–µ—Ç –¥–∞–≤–∞–π –ø—Ä–æ—Å—Ç–æ –µ–≥–æ —É—Ç–æ–ø–∏–º?");
            if (msg.content.toLowerCase().indexOf("—á–µ–≥–æ –Ω–µ—Ç —É –∂–∏–≤—ã—Ö") != -1) msg.channel.send("–ó–∞–≥—Ä–æ–±–Ω—ã–π —á–∞–π, –ø—Ä—è–º–∏–∫–æ–º –∏–∑ —Å–∫–ª–µ–ø–∞!");
        };
    } catch (err) {
        msg.channel.send('<@542663623789641729> –º–∞–º, —è —É–ø–∞–ª <a:hlepng:882291167948079165>');
        let control = client.channels.cache.get('878520465856036935');
        control.send('–ú–∞–º–∞, —Ö–ª–µ–ø!');
        console.log(err);
    };
});


client.login(process.env.BOT_TOKEN);
